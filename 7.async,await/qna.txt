Q. Async/Await와 Promise의 차이에 대해


A.
Async/Await와 Promise는 JavaScript에서 비동기 작업을 처리하는 방식입니다. 
이들의 차이는 주로 코드의 가독성과 작성 방식에 있습니다.

Promise는 then과 catch 메서드를 사용하여 비동기 작업의 성공과 실패를 처리합니다. 
Promise의 체이닝 구조는 복잡한 비동기 작업에서 코드가 복잡해질 수 있으나, 여러 Promise를 병렬로 처리하는 등의 복잡한 상황에서 유용할 수 있습니다.

Async/Await는 Promise의 상위 구문으로, 비동기 작업을 동기식으로 작성하게 해주어 코드의 가독성을 높입니다. 
'async' 키워드로 함수를 선언하고, 해당 함수 내부에서 'await' 키워드를 사용해 Promise가 반환될 값을 기다릴 수 있습니다. 
이 방식은 코드의 흐름을 직관적으로 이해할 수 있게 해줍니다.

결론적으로, Async/Await는 코드의 가독성을 높여 개발을 단순화하는 반면, Promise는 더 세밀한 제어가 필요한 복잡한 상황에서 사용될 수 있습니다. 
두 방식 모두 자신의 요구에 맞게 적절하게 사용하는 것이 좋습니다.



Async Await 자체적으로는 에러핸들링 기능이 없어 TRY CATCH를 활용해야 한다
