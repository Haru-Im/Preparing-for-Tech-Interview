[비동기의 필요성]

1. 효율적인 자원 사용: 일부 작업은 시간이 오래 걸리기 때문에, 그 작업이 완료될 동안 다른 작업을 진행하는 것이 효율적입니다. 
예를 들면, 디스크에서 큰 파일을 읽거나 외부 서버로부터 데이터를 가져오는 작업이 있을 때, 해당 작업만 기다리다 보면 많은 자원이 낭비됩니다.

2. 반응성 향상: 사용자 인터페이스를 가진 애플리케이션(예: 웹 애플리케이션)에서는 사용자의 요청에 빠르게 응답해야 합니다. 
비동기적 처리를 통해 UI가 멈추지 않고 부드럽게 동작할 수 있게 합니다.

3. 병렬 처리: 여러 비동기 작업을 동시에 진행할 수 있어, 작업들 사이에 의존성이 없는 경우 더 빠른 성능 향상을 기대할 수 있습니다.

4. 코드 구조: 특히 프로미스나 async/await 같은 패턴을 사용하면, 비동기 코드를 마치 동기 코드처럼 읽히게 할 수 있어 코드의 가독성이 향상됩니다.