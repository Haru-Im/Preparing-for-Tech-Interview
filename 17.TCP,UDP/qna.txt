Q. TCP/UDP에 대해 설명해주세요

A.
[프로토콜이란?]
컴퓨터나 디바이스들이 서로 통신하기 위한 "약속" 또는 "규칙"
이 약속을 통해 기기들은 어떻게, 언제, 어떤 형태로 데이터를 보내거나 받아야 하는지 알 수 있음

TCP, UDP, IP 는 모두 이런 프로토콜의 예
각각 서로 다른 기능과 규칙을 가지고 있어서, 컴퓨터끼리 효과적으로 데이터를 주고받을 수 있음


[프로토콜 스택]
- 여러 프로토콜이 계층적으로 구성된 구조
- 인터넷의 통신은 복잡하며, 이 복잡한 통신 과정을 여러 단계로 나눠 각 단계마다 특정한 역할을 하는 프로토콜을 사용
- 이러한 프로토콜들이 여러 계층으로 쌓여 있는 것을 "프로토콜 스택"

컴퓨터 네트워크에서 "프로토콜 스택"이라는 것은 여러 프로토콜이 계층적으로 조직되어 있는 구조를 의미
각 계층은 네트워크 통신의 다른 부분에 대한 업무를 처리합니다.
TCP와 UDP는 이런 계층 중 "전송 계층(Transport Layer)"에 속하는 프로토콜입
즉, "프로토콜 스택"이라는 큰 체계 안에서 TCP와 UDP는 특정 업무, 여기서는 데이터의 안전한 전송이나 빠른 전송을 담당하는 역할을 합니다.


[TCP와 UDP]
TCP와 UDP는 인터넷 통신을 위한 프로토콜 중 하나로, 어떻게 데이터를 전송할 것인지에 대한 규칙을 정의
이 두 프로토콜은 전체 프로토콜 스택의 일부로 작동

TCP (Transmission Control Protocol)
정의: 데이터 전송을 위한 안정적이고 신뢰할 수 있는 연결 방식
특징:
    1. 연결 지향적: 데이터를 전송하기 전에 연결을 설정하고, 전송 후 연결을 종료
    2. 신뢰성: 데이터가 올바르게 전송되었는지 확인하고, 잘못된 데이터는 다시 보냄
    3. 순서 보장: 데이터는 전송 순서대로 도착함
장점: 데이터의 무결성과 순서가 보장되어 신뢰할 수 있음
단점: 연결 설정과 데이터 확인 과정으로 인해 상대적으로 느림
적합한 상황: 데이터의 정확성이 중요한 상황. 웹 브라우징, 이메일, 파일 전송 등


UDP (User Datagram Protocol)
정의: 빠르게 데이터를 전송하지만 신뢰성을 보장하지 않는 연결 방식
특징:
    1. 비연결 지향적: 연결을 설정하지 않고 바로 데이터 전송
    2. 신뢰성 없음: 데이터 전송 확인 과정이 없음
    3. 순서 보장하지 않음: 데이터는 순서대로 도착하지 않을 수 있음
장점: 빠른 데이터 전송
단점: 데이터의 누락이나 순서 변경이 발생할 수 있음
적합한 상황: 빠른 데이터 전송이 필요한 상황. 스트리밍, 온라인 게임, VoIP(인터넷 전화) 등



